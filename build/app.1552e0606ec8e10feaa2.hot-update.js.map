{"version":3,"sources":["webpack:///./src/app/services/serverInteraction/accountServerInteractionService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEuC;AACwC;AAGpB;AACS;AAGpE;IAAqD,mDAA4B;IAAjF;QAAA,qEA+BC;QA9BoB,kBAAY,GAAgB,qEAAS,CAAC,GAAG,CAAc,4EAAkB,CAAC,WAAW,CAAC,CAAC;QAEjG,WAAK,GAAG,UAAC,OAAY;YACxB,OAAO,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACxC,CAAC;QAEM,aAAO,GAAG;YACb,OAAO,KAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACrC,CAAC;QAEM,YAAM,GAAG;YACZ,OAAO,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAEM,cAAQ,GAAG,UAAC,OAAY;YAC3B,OAAO,KAAI,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAC3C,CAAC;QAEM,oBAAc,GAAG,UAAC,OAA0B;YAC/C,OAAO,KAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACjD,CAAC;QAEM,uBAAiB,GAAG,UAAC,OAA6B;YACrD,OAAO,KAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAC9C,CAAC;QAEM,cAAQ,GAAG,UAAC,OAAmB;YAClC,OAAO,KAAI,CAAC,GAAG,CAAC,SAAS,EAAC,EAAC,OAAO,EAAE,EAAC,eAAe,EAAE,SAAS,GAAE,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,EAAC,EAAC,CAAC;QACxG,CAAC;;IAEL,CAAC;IA/BY,+BAA+B;QAD3C,4DAAU,EAAE;OACA,+BAA+B,CA+B3C;IAAD,sCAAC;CAAA,CA/BoD,2FAA4B,GA+BhF;AA/B2C","file":"app.1552e0606ec8e10feaa2.hot-update.js","sourcesContent":["import { ChagnePasswordDto } from './../../types/models/ChagePasswordDto';\r\nimport { EmailConfirmationDto } from './../../types/models/EmailConfirmationDto';\r\nimport { injectable } from \"inversify\";\r\nimport { BaseServerInteractionService } from \"./baseServiceInteractionService\";\r\nimport { TopicDto } from '../../types/models/TopicDto';\r\nimport { AuthService } from \"../authService\";\r\nimport container from \"../../inversify/inversifyContainer\";\r\nimport { SERVICE_IDENTIFIER } from \"../../inversify/inversifyTypes\";\r\n\r\n@injectable()\r\nexport class AccountServerInteractionService extends BaseServerInteractionService {\r\n    private readonly _authService: AuthService = container.get<AuthService>(SERVICE_IDENTIFIER.AuthService);\r\n\r\n    public login = (payload: any): Promise<any> => {\r\n        return this.post('/login', payload);\r\n    }\r\n\r\n    public getUser = (): Promise<any> => {\r\n        return this.get('/account/self');\r\n    }\r\n\r\n    public logOut = (): Promise<any> => {\r\n        return this.delete('/logout');\r\n    }\r\n\r\n    public register = (payload: any): Promise<any> => {\r\n        return this.post('/register', payload);\r\n    }\r\n\r\n    public changePassword = (payload: ChagnePasswordDto): Promise<any> => {\r\n        return this.post(\"/account/password/change\");\r\n    }\r\n   \r\n    public emailConfirmation = (payload: EmailConfirmationDto): Promise<any> => {\r\n        return this.post(\"/account/emailconfirm\");\r\n    }\r\n\r\n    public getTopic = (payload: TopicDto[]): Promise<any> => {\r\n        return this.get(\"/topics\",{headers: {'Authorization': 'Bearer '+ this._authService.getAuthToken()}})\r\n    }\r\n\r\n}"],"sourceRoot":""}