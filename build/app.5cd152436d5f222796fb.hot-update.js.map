{"version":3,"sources":["webpack:///./src/app/components/pages/registration/RegistrationSaga.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACoD;AAEU;AACS;AAEa;AAKhB;AAGT;AACM;AAEjE;IAAsC,oCAAmF;IAOrH;QAAA,YAEI,iBAAO,SAGV;QAVS,8BAAwB,GAAoC,qEAAS,CAAC,GAAG,CAAkC,4EAAkB,CAAC,+BAA+B,CAAC,CAAC;QAC/J,aAAO,GAAwB,qEAAS,CAAC,GAAG,CAAsB,4EAAkB,CAAC,mBAAmB,CAAC,CAAC;QACjG,iBAAW,GAAe,qEAAS,CAAC,GAAG,CAAa,4EAAkB,CAAC,UAAU,CAAC,CAAC;QACrF,kBAAY,GAAgB,qEAAS,CAAC,GAAG,CAAc,4EAAkB,CAAC,WAAW,CAAC,CAAC;QAMpG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACrD,CAAC;IAEO,gCAAK,GAAb;;;wBACI,WAAM,oEAAS,CAAC,gFAA0B,EAAE,IAAI,CAAC,YAAY,CAAC;;oBAA9D,SAA8D,CAAC;;;;KAClE;IAEQ,uCAAY,GAArB,UAAsB,MAAiE;QAAvF,iBAMC;;;wBALG,WAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAChG,UAAC,QAAwC;wBACrC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBAC3C,oEAAO,CAAC,IAAI,CAAC,mEAAU,CAAC,CAAC;oBAC7B,CAAC,CAAC;;oBAJF,SAIE,CAAC;;;;KACN;IACL,uBAAC;AAAD,CAAC,CAzBqC,yFAAY,GAyBjD","file":"app.5cd152436d5f222796fb.hot-update.js","sourcesContent":["import { AxiosResponse } from \"axios\";\r\nimport { takeEvery, put } from \"redux-saga/effects\";\r\nimport { AppActions } from \"../../../appActions\";\r\nimport container from \"../../../inversify/inversifyContainer\";\r\nimport { SERVICE_IDENTIFIER } from \"../../../inversify/inversifyTypes\";\r\nimport { IActionPayloaded } from \"../../../reduxInfrastructure/actions/shared/IAction\";\r\nimport { BaseFormSaga } from \"../../../reduxInfrastructure/sagas/form/BaseFormSaga\";\r\nimport { AccountServerInteractionService } from \"../../../services/serverInteraction/accountServerInteractionService\";\r\nimport { ISubmitFormPayload } from \"../../../types/form/ISubmitFormPayload\";\r\nimport { RegistrationDto } from \"../../../types/models/RegistrationDto\";\r\nimport { RegistrationActions } from \"./RegistrationActions\";\r\nimport { REGISTRATION__REGISTRATION } from \"./RegistrationContants\";\r\nimport { AuthService } from './../../../services/authService';\r\nimport { AuthResponseDto } from '../../../types/models/AuthResponseDto';\r\nimport history from \"../../../utils/helpers/HistoryHelper\";\r\nimport { ROOT_ROUTE } from '../../../../shared/constants/routes';\r\n\r\nexport class RegistrationSaga extends BaseFormSaga<RegistrationDto, RegistrationActions, AccountServerInteractionService> {\r\n\r\n    protected serverInteractionService: AccountServerInteractionService = container.get<AccountServerInteractionService>(SERVICE_IDENTIFIER.AccountServerInteractionService);\r\n    protected actions: RegistrationActions = container.get<RegistrationActions>(SERVICE_IDENTIFIER.RegistrationActions);\r\n    protected readonly _appActions: AppActions = container.get<AppActions>(SERVICE_IDENTIFIER.AppActions);\r\n    private readonly _authService: AuthService = container.get<AuthService>(SERVICE_IDENTIFIER.AuthService);\r\n\r\n    public constructor(\r\n    ) {\r\n        super();\r\n\r\n        this.registration = this.registration.bind(this);\r\n    }\r\n\r\n    public *watch(): Generator {\r\n        yield takeEvery(REGISTRATION__REGISTRATION, this.registration);\r\n    }\r\n\r\n    private *registration(action: IActionPayloaded<ISubmitFormPayload<RegistrationDto, {}>>): Generator {\r\n        yield this.doSubmitApiRequest(action, this.serverInteractionService.register(action.payload.dto),\r\n        (response: AxiosResponse<AuthResponseDto>) => {\r\n            this._authService.setTokens(response.data);\r\n            history.push(ROOT_ROUTE);\r\n        });\r\n    }\r\n}"],"sourceRoot":""}