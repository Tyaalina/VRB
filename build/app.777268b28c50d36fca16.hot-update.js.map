{"version":3,"sources":["webpack:///./src/app/components/pages/topic/TopicForm.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC0B;AACY;AAIsB;AAGnC;AAGuC;AACvB;AAMzC;IAAoB,yBAA4B;IAAhD;;IA2BA,CAAC;IA1BQ,sBAAM,GAAb;QACE,IAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,KAAK,CAAC,MAAM,CAAC;QAC1C,OAAO,CACL,2DAAC,yDAAW,QACT,UAAC,CAAC,IAAK,QACN,2DAAC,+CAAO,IAAC,KAAK,EAAE,sDAAO,EAAE,IAAI;YAC3B,2DAAC,2CAAG,IAAC,GAAG,EAAC,OAAO;gBACd,2DAAC,4CAAI,IAAC,OAAO,EAAC,OAAO,EAAC,GAAG,EAAC,OAAO,IAC9B,KAAK,CAAC,GAAG,CAAC,cAAM,QACf,8EAAc,CAQf,EATgB,CAShB,CAAC,CACG,CACH,CACE,CACX,EAjBO,CAiBP,CACW,CACf,CAAC;IACJ,CAAC;IACH,YAAC;AAAD,CAAC,CA3BmB,4CAAK,CAAC,SAAS,GA2BlC;AAED,SAAS,eAAe,CAAC,KAAiB;IACxC,OAAO,KAAK,CAAC,YAAY,CAAC;AAC5B,CAAC;AAEM,IAAM,SAAS,GAAG,2DAAO,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC","file":"app.777268b28c50d36fca16.hot-update.js","sourcesContent":["import { Formik, FormikBag, FormikHelpers, FormikProps } from \"formik\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Icon } from \"semantic-ui-react\";\r\nimport { IRootState } from \"../../../reduxInfrastructure/RootState\";\r\nimport { IBaseFormProps } from \"../../../types/form/IBaseFormProps\";\r\nimport { Translation, useTranslation } from \"react-i18next\";\r\nimport { TopicDto } from \"../../../types/models/TopicDto\";\r\nimport { ITopicState } from \"./TopicState\";\r\nimport \"./TopicPage.css\";\r\nimport { TopicComponent } from \"../../shared/topic/topicComponent\";\r\nimport Pic1 from \"../../../../img/palm_tree_PNG93263.png\"\r\nimport { Grommet, ResponsiveContext, Box, Grid } from 'grommet';\r\nimport { grommet } from 'grommet/themes';\r\n\r\n\r\ntype IFormState = TopicDto;\r\ntype ITopicProps = IBaseFormProps<IFormState, {}>;\r\n\r\nclass Topic extends React.Component<ITopicProps> {\r\n  public render(): JSX.Element {\r\n    const cards = Array(20)\r\n    console.log(\"Размер массива\",cards.length)\r\n    return (\r\n      <Translation>\r\n        {(t) => (\r\n          <Grommet theme={grommet} full>\r\n            <Box pad=\"large\">\r\n              <Grid columns='small' gap=\"small\">\r\n                {cards.map(() => (\r\n                  <div>123</div>\r\n                  // <TopicComponent\r\n                  //   id=\"1\"\r\n                  //   imagelink={Pic1}\r\n                  //   className=\"1\"\r\n                  //   title=\"test title\"\r\n                  //   description=\"test description 1 2 3 lalala sasasasa one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen\"\r\n                  // />\r\n                ))}\r\n              </Grid>\r\n            </Box>\r\n          </Grommet>\r\n        )}\r\n      </Translation>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: IRootState): ITopicState {\r\n  return state.registration;\r\n}\r\n\r\nexport const TopicForm = connect(mapStateToProps)(Topic);\r\n"],"sourceRoot":""}