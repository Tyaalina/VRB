{"version":3,"sources":["webpack:///./src/app/components/pages/message/MessagePage.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA0B;AAC4D;AAC5D;AACQ;AACI;AAE8B;AACN;AACS;AAK5B;AAEW;AACT;AAG7C,IAAM,KAAK,GAAG;IACZ,MAAM,EAAE;QACN,IAAI,EAAE;YACJ,MAAM,EAAE,YAAY;SACrB;QACD,KAAK,EAAE;YACL,MAAM,EAAE;gBACN,KAAK,EAAE,SAAS;aACjB;SACF;QACD,OAAO,EAAE;YACP,MAAM,EAAE;gBACN,MAAM,EAAE,MAAM;aACf;SACF;KACF;IACD,IAAI,EAAE;QACJ,SAAS,EAAE;YACT,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,MAAM;SAClB;QACD,MAAM,EAAE;YACN,GAAG,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE;SACjD;KACF;IACD,OAAO,EAAE;QACP,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE;YACL,CAAC,EAAE;gBACD,MAAM,EAAE;oBACN,IAAI,EAAE,MAAM;oBACZ,MAAM,EAAE,MAAM;iBACf;aACF;SACF;KACF;CACF,CAAC;AAKF;IAA0B,+BAAwB;IAIhD,qBAAmB,KAAoB;QAAvC,YACE,kBAAM,KAAK,CAAC,SAGb;QANgB,kBAAY,GAAgB,qEAAS,CAAC,GAAG,CAAc,4EAAkB,CAAC,WAAW,CAAC,CAAC;QAItG,KAAI,CAAC,OAAO,GAAG,qEAAS,CAAC,GAAG,CAAiB,4EAAkB,CAAC,WAAW,CAAC,CAAC;QAC7E,KAAK,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;;IAC1C,CAAC;IAED,uCAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,yDAAO,EAAE,CAAC,CAAC;QAEvC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAE5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;IACzC,CAAC;IAED,gCAAU,GAAV;QAAA,iBAGC;QAFC,4CAAK,CAAC,GAAG,CAAC,oCAAoC,EAAE,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,YAAU,IAAI,CAAC,YAAY,CAAC,YAAY,EAAI,EAAE,EAAE,CAAE;aAC3H,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAhE,CAAgE,CAAC;IACrF,CAAC;IAED,4BAAM,GAAN;QACE,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAE7B,OAAO,CAAC;YACN,2DAAC,kDAAY,IAAC,KAAK,EAAE,sEAAU,GAAI;YACnC,2DAAC,+CAAO,IAAC,KAAK,EAAE,KAAK;gBACnB,2DAAC,2CAAG,IACF,MAAM,EAAC,QAAQ,EACf,GAAG,EAAC,QAAQ,EACZ,SAAS,EAAC,QAAQ,EAClB,YAAY,EAAC,QAAQ,EACrB,KAAK,EAAC,QAAQ;oBAEd,2DAAC,4CAAI,IAAC,SAAS,EAAC,OAAO,EAAC,KAAK,EAAC,OAAO;wBACnC,2DAAC,gDAAQ,IAAC,MAAM,EAAC,OAAO;4BACtB,2DAAC,+CAAO,IAAC,KAAK,EAAC,GAAG,EAAC,SAAS,EAAC,QAAQ,sFAE3B;4BACV,2DAAC,kEAAgB,IACf,EAAE,EAAC,GAAG,EACN,KAAK,EAAC,+DAAa,EACnB,SAAS,EAAC,0BAA0B,EACpC,cAAc,EAAC,mDAAW,GACR;4BACpB,2DAAC,kEAAgB,IACf,EAAE,EAAC,GAAG,EACN,KAAK,EAAC,wMAAwC,EAC9C,SAAS,EAAC,0BAA0B,EACpC,cAAc,EAAC,qEAAc,GACX,CACX;wBACX,2DAAC,kDAAU;4BACT,2DAAC,gDAAQ,IAAC,WAAW,EAAC,uFAAiB,GAC5B,CACA,CACR,CACH,CACE,CACN,CAAC;IACT,CAAC;IACH,kBAAC;AAAD,CAAC,CA/DyB,+CAAS,GA+DlC;AAED,SAAS,eAAe,CAAC,KAAiB;IACxC,oBAAY,KAAK,CAAC,OAAO,EAAE;AAC7B,CAAC;AAEM,IAAM,WAAW,GAAG,2DAAO,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC;AAElD,0EAAW,EAAC","file":"app.812337e4dad451542d7f.hot-update.js","sourcesContent":["import axios from \"axios\";\r\nimport { Box, Card, CardBody, CardFooter, Grommet, Heading, TextArea } from \"grommet\";\r\nimport React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { menuConfig } from \"../../../../shared/constants/menuItems\";\r\nimport container from \"../../../inversify/inversifyContainer\";\r\nimport { SERVICE_IDENTIFIER } from \"../../../inversify/inversifyTypes\";\r\nimport { IRootState } from \"../../../reduxInfrastructure/RootState\";\r\nimport { AuthService } from \"../../../services/authService\";\r\nimport { IBaseFormProps } from \"../../../types/form/IBaseFormProps\";\r\nimport { TopicMessageDto } from \"../../../types/models/TopicMessageDto\";\r\nimport MenuCompnent from \"../../menu/Menu\";\r\nimport { MessageActions } from \"./MessageActions\";\r\nimport { MessageComponent } from \"./MessageComponent\";\r\nimport { MESSAGE } from \"./MessageConstants\";\r\nimport { IMessageState } from \"./MessageState\";\r\n\r\nconst theme = {\r\n  global: {\r\n    font: {\r\n      family: 'Prosto One',\r\n    },\r\n    focus: {\r\n      border: {\r\n        color: \"#E9FFE1\"\r\n      }\r\n    },\r\n    control: {\r\n      border: {\r\n        radius: \"20px\"\r\n      }\r\n    }\r\n  },\r\n  card: {\r\n    container: {\r\n      background: '#1a3a39',\r\n      elevation: 'none',\r\n    },\r\n    footer: {\r\n      pad: { horizontal: 'medium', vertical: 'small' },\r\n    },\r\n  },\r\n  heading: {\r\n    color: '#ADFF0037',\r\n    level: {\r\n      2: {\r\n        medium: {\r\n          size: \"30px\",\r\n          height: \"40px\",\r\n        }\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\ntype IFormState = TopicMessageDto[];\r\ntype IMessageProps = IBaseFormProps<IFormState, {}>;\r\n\r\nclass messagePage extends Component<IMessageProps>  {\r\n  protected readonly actions: MessageActions;\r\n  private readonly _authService: AuthService = container.get<AuthService>(SERVICE_IDENTIFIER.AuthService);\r\n\r\n  public constructor(props: IMessageProps) {\r\n    super(props);\r\n    this.actions = container.get<MessageActions>(SERVICE_IDENTIFIER.TopicAction);\r\n    props.dispatch(this.actions.initForm());\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch({ type: MESSAGE });\r\n    // this.getMessage()\r\n    console.log(\"Вывод айдишки\")\r\n    // @ts-ignore\r\n    console.log(this.props.match.params.id)\r\n  }\r\n\r\n  getMessage() {\r\n    axios.get('http://185.209.31.106:55558/topic/', { headers: { Authorization: `Bearer ${this._authService.getAuthToken()}` } },)\r\n      .then(result => this.props.dispatch(this.actions.setMessage(result.data.topics)))\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    document.body.className = \"\";\r\n\r\n    return (<div>\r\n      <MenuCompnent items={menuConfig} />\r\n      <Grommet theme={theme}>\r\n        <Box\r\n          margin=\"xlarge\"\r\n          pad=\"medium\"\r\n          alignSelf='center'\r\n          alignContent=\"center\"\r\n          align=\"center\"\r\n        >\r\n          <Card elevation=\"large\" width=\"large\">\r\n            <CardBody height=\"small\">\r\n              <Heading level=\"2\" alignSelf=\"center\">\r\n                Сообщения темы\r\n              </Heading>\r\n              <MessageComponent\r\n                id=\"1\"\r\n                title=\"Просто тест\"\r\n                createdAt=\"2021-05-21T17:59:28.384Z\"\r\n                authorUserName=\"Это автор\"\r\n              ></MessageComponent>\r\n              <MessageComponent\r\n                id=\"2\"\r\n                title=\"Это ещё один текст чтобы проверить всё\"\r\n                createdAt=\"2021-05-21T17:59:28.384Z\"\r\n                authorUserName=\"Второй автор\"\r\n              ></MessageComponent>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <TextArea placeholder=\"Новое сообщение\">\r\n              </TextArea>\r\n            </CardFooter>\r\n          </Card>\r\n        </Box>\r\n      </Grommet>\r\n    </div>)\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: IRootState): IMessageState {\r\n  return { ...state.message }\r\n}\r\n\r\nexport const MessagePage = connect(mapStateToProps)(messagePage);\r\n\r\nexport default MessagePage;"],"sourceRoot":""}