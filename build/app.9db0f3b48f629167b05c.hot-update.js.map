{"version":3,"sources":["webpack:///./src/app/components/pages/topic/TopicForm.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC0B;AACY;AAIsB;AAGnC;AAC0C;AACV;AACO;AAItC;AAa1B;IAAoB,yBAA+B;IAEjD,eAAY,KAAa;QAAzB,YACE,kBAAM,KAAK,CAAC,SAEb;QADC,KAAI,CAAC,KAAK,GAAG,EAAC,KAAK,EAAC,EAAE,EAAC,CAAC;;IAC1B,CAAC;IAED,iCAAiB,GAAjB;QAAA,iBAMC;QAJC,4CAAK,CAAC,oCAAoC,CAAC;aAC1C,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,QAAQ,CAAC;YAC5B,KAAK,EAAE,MAAM,CAAC,IAAI;SACnB,CAAC,EAFc,CAEd,CAAC;IACL,CAAC;IAEM,sBAAM,GAAb;QAAA,iBAuBC;QAtBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC7B,OAAO,CACL,2DAAC,yDAAW,QACT,UAAC,CAAC,IAAK,QACN,2DAAC,+CAAO;YACN,2DAAC,2CAAG,IAAC,GAAG,EAAC,OAAO;gBACd,2DAAC,4CAAI,IAAC,OAAO,EAAC,QAAQ,EAAC,GAAG,EAAC,OAAO,EAAC,KAAK,EAAC,QAAQ,EAAC,SAAS,EAAC,SAAS,IAClE,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAO,IAAI,QAC7B,2DAAC,2EAAc,IACb,EAAE,EAAE,OAAO,CAAC,OAAO,EACnB,SAAS,EAAE,mEAAI,EACf,SAAS,EAAC,GAAG,EACb,KAAK,EAAE,OAAO,CAAC,KAAK,EACpB,WAAW,EAAE,OAAO,CAAC,WAAW,GAChC,CACL,EARgC,CAQhC,CAAC,CACG,CACH,CACE,CACX,EAhBO,CAgBP,CACW,CACf,CAAC;IACJ,CAAC;IACH,YAAC;AAAD,CAAC,CAvCmB,4CAAK,CAAC,SAAS,GAuClC;AAED,SAAS,eAAe,CAAC,KAAiB;IACxC,oBAAW,KAAK,CAAC,KAAK,EAAE;AAC1B,CAAC;AAEM,IAAM,SAAS,GAAG,2DAAO,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC","file":"app.9db0f3b48f629167b05c.hot-update.js","sourcesContent":["import { Formik, FormikBag, FormikHelpers, FormikProps } from \"formik\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Icon } from \"semantic-ui-react\";\r\nimport { IRootState } from \"../../../reduxInfrastructure/RootState\";\r\nimport { IBaseFormProps } from \"../../../types/form/IBaseFormProps\";\r\nimport { Translation, useTranslation } from \"react-i18next\";\r\nimport { TopicDto } from \"../../../types/models/TopicDto\";\r\nimport { ITopicState } from \"./TopicState\";\r\nimport \"./TopicPage.css\";\r\nimport { TopicComponent } from \"../../shared/topic/topicComponent\";\r\nimport Pic1 from \"../../../../img/palm_tree_PNG93263.png\"\r\nimport { Grommet, ResponsiveContext, Box, Grid } from 'grommet';\r\nimport { grommet } from 'grommet/themes';\r\nimport { ISharedReduxProps } from \"../../../types/ISharedReduxProps\";\r\nimport { TOPIC } from \"./TopicConstants\";\r\nimport axios from \"axios\";\r\n\r\n\r\ntype IFormState = TopicDto[];\r\ntype ITopicProps = IBaseFormProps<IFormState, {}>;\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n  items: TopicDto[];\r\n}\r\n\r\nclass Topic extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {items:[]};\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios('http://localhost:4000/topic/')\r\n    axios('http://185.209.31.106:55558/topics')\r\n    .then(result => this.setState({\r\n      items: result.data\r\n    }))\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    console.log(this.state.items)\r\n    return (\r\n      <Translation>\r\n        {(t) => (\r\n          <Grommet>\r\n            <Box pad=\"large\">\r\n              <Grid columns='medium' gap=\"small\" align=\"center\" alignSelf=\"stretch\">\r\n                {this.state.items.map(element => (\r\n                    <TopicComponent\r\n                      id={element.topicId}\r\n                      imagelink={Pic1}\r\n                      className=\"1\"\r\n                      title={element.title}\r\n                      description={element.description}\r\n                    />\r\n                ))}\r\n              </Grid>\r\n            </Box>\r\n          </Grommet>\r\n        )}\r\n      </Translation>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: IRootState): ITopicState {\r\n  return {...state.topic};\r\n}\r\n\r\nexport const TopicForm = connect(mapStateToProps)(Topic);\r\n"],"sourceRoot":""}