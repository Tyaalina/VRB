{"version":3,"sources":["webpack:///./node_modules/react-confirm-alert/src/react-confirm-alert.css?1d1e","webpack:///./node_modules/react-loader-spinner/dist/loader/css/react-spinner-loader.css","webpack:///./node_modules/react-toastify/dist/ReactToastify.min.css?8d89","webpack:///./src/app/components/menu/Menu.css?1d06","webpack:///./src/app/components/pages/changePassword/ChangePasswordPage.css?9f13","webpack:///./src/app/components/pages/emailConfirmation/EmailConfirmationPage.css?90e1","webpack:///./src/app/components/pages/home/homePage.css?0626","webpack:///./src/app/components/pages/login/LoginPage.css?553c","webpack:///./src/app/components/pages/profileHeader/ProfileHeaderPage.css?812c","webpack:///./src/app/components/pages/registration/RegistrationPage.css?cbbd","webpack:///./src/app/components/pages/searchBar/SearchBarPage.css?226b","webpack:///./src/app/components/pages/topic/TopicForm.tsx","webpack:///./src/app/components/pages/topic/TopicPage.css","webpack:///./src/app/components/shared/buttons/buttonComponent.css?a767","webpack:///./src/app/components/shared/checkBox/CheckBoxComponent.css?3183","webpack:///./src/app/components/shared/input/inputComponent.css?bd92","webpack:///./src/app/components/shared/profileHeader/profileHeaderComponent.css?7231","webpack:///./src/index.css?31bf"],"names":[],"mappings":";;;;;;;;;AAAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC0C;AACJ;AAOb;AAcR;AAKjB;IAAoB,yBAA4B;IAAhD;;IA6BA,CAAC;IA5BQ,sBAAM,GAAb;QACE,IAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;QACvB,IAAM,IAAI,GAAG,wDAAU,CAAC,yDAAiB,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,KAAK,CAAC,MAAM,CAAC;QAC1C,OAAO,CACL,8EAAc,CAqBf,CAAC;IACJ,CAAC;IACH,YAAC;AAAD,CAAC,CA7BmB,4CAAK,CAAC,SAAS,GA6BlC;AAED,SAAS,eAAe,CAAC,KAAiB;IACxC,OAAO,KAAK,CAAC,YAAY,CAAC;AAC5B,CAAC;AAEM,IAAM,SAAS,GAAG,2DAAO,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;AC/DzD,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,uC","file":"app.af2479b25dec7a3185ca.hot-update.js","sourcesContent":["// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import { Formik, FormikBag, FormikHelpers, FormikProps } from \"formik\";\r\nimport React, { useContext } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Icon } from \"semantic-ui-react\";\r\nimport { IRootState } from \"../../../reduxInfrastructure/RootState\";\r\nimport { IBaseFormProps } from \"../../../types/form/IBaseFormProps\";\r\nimport { Translation, useTranslation } from \"react-i18next\";\r\nimport { TopicDto } from \"../../../types/models/TopicDto\";\r\nimport { ITopicState } from \"./TopicState\";\r\nimport \"./TopicPage.css\";\r\nimport { TopicComponent } from \"../../shared/topic/topicComponent\";\r\nimport Pic1 from \"../../../../img/palm_tree_PNG93263.png\"\r\n//import { Grommet, ResponsiveContext, Box, Grid } from 'grommet';\r\n//import { grommet } from 'grommet/themes';\r\n\r\nimport {\r\n  grommet,\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Grommet,\r\n  ResponsiveContext,\r\n  Text,\r\n} from 'grommet';\r\n\r\ntype IFormState = TopicDto;\r\ntype ITopicProps = IBaseFormProps<IFormState, {}>;\r\n\r\nclass Topic extends React.Component<ITopicProps> {\r\n  public render(): JSX.Element {\r\n    const cards = Array(20)\r\n    const size = useContext(ResponsiveContext)\r\n    console.log(\"Размер массива\",cards.length)\r\n    return (\r\n      <div>123</div>\r\n      // <Translation>\r\n      //   {(t) => (\r\n      //     <Grommet theme={grommet} full>\r\n      //       <Box pad=\"large\">\r\n      //         <Grid columns={size !== 'small' ? 'small' : '100%'} gap=\"small\">\r\n      //           {cards.map(() => (\r\n\r\n      //             <TopicComponent\r\n      //               id=\"1\"\r\n      //               imagelink={Pic1}\r\n      //               className=\"1\"\r\n      //               title=\"test title\"\r\n      //               description=\"test description 1 2 3 lalala sasasasa one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen\"\r\n      //             />\r\n      //           ))}\r\n      //         </Grid>\r\n      //       </Box>\r\n      //     </Grommet>\r\n      //   )}\r\n      // </Translation>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: IRootState): ITopicState {\r\n  return state.registration;\r\n}\r\n\r\nexport const TopicForm = connect(mapStateToProps)(Topic);\r\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin"],"sourceRoot":""}