{"version":3,"sources":["webpack:///./src/app/components/pages/registration/RegistrationForm.tsx"],"names":[],"mappings":"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","file":"app.e16ffd89eadbd42cf42f.hot-update.js","sourcesContent":["import { Formik, FormikBag, FormikHelpers, FormikProps } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport * as Yup from \"yup\";\r\nimport { LOGIN_PAGE } from \"../../../../shared/constants/routes\";\r\nimport container from \"../../../inversify/inversifyContainer\";\r\nimport { SERVICE_IDENTIFIER } from \"../../../inversify/inversifyTypes\";\r\nimport { IRootState } from \"../../../reduxInfrastructure/RootState\";\r\nimport { IBaseFormProps } from \"../../../types/form/IBaseFormProps\";\r\nimport { RegistrationDto } from \"../../../types/models/RegistrationDto\";\r\nimport history from \"../../../utils/helpers/HistoryHelper\";\r\nimport { ButtonComponent } from \"../../shared/buttons/buttonComponent\";\r\nimport { CheckBoxComponent } from \"../../shared/checkBox/checkBoxComponent\";\r\nimport { InputComponent } from \"../../shared/input/inputComponent\";\r\nimport { FormMessageWrapper } from \"../../shared/wrappers/FormMessageWrapper\";\r\nimport { FormPlaceholder } from \"../../shared/wrappers/FormPlaceholder\";\r\nimport { IRegistrationState } from \"./RegisrationState\";\r\nimport { RegistrationActions } from \"./RegistrationActions\";\r\nimport { Translation, useTranslation } from \"react-i18next\";\r\n\r\n\r\nfunction componentDidMount() {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://kit.fontawesome.com/003b2b18f7.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n}\r\n\r\n\r\ntype IFormState = RegistrationDto;\r\ntype IRegistrationFormProps = IBaseFormProps<IFormState, {}>;\r\n\r\nclass RegistrationFormComponent extends React.Component<IRegistrationFormProps> {\r\n    protected readonly actions: RegistrationActions;\r\n\r\n    public validationSchema = {\r\n        userName: Yup.string().required('Поле является обязательным').trim(),\r\n        firstName: Yup.string().required('Поле является обязательным').trim(),\r\n        lastName: Yup.string().required('Поле является обязательным').trim(),\r\n        email: Yup.string().required('Поле является обязательным').trim().email(\"Email не корректный\"),\r\n        // isSubscribe: Yup.boolean().required(\"Вы должны согласится с правилами\"),\r\n        password: Yup.string().required('Поле является обязательным').trim(),\r\n        confirmPassword: Yup.string().required('Поле является обязательным').trim(),\r\n    };\r\n\r\n    public getInitialValues = (): IFormState => (\r\n        {\r\n            userName: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            role: \"user\"\r\n        });\r\n\r\n    private _onSubmit = (dto: RegistrationDto, form: FormikHelpers<RegistrationDto>| undefined): void => {\r\n        this.props.dispatch(this.actions.clearFormMessages());\r\n        const payload = {\r\n            dto: dto,\r\n            formHelpers: form as FormikBag<{}, IFormState>,\r\n            id: undefined\r\n        };\r\n        this.props.dispatch(this.actions.registration(payload));\r\n    };\r\n\r\n    private _createValidationSchemaObject = (): Yup.ObjectSchema => {\r\n        return Yup.object().shape(this.validationSchema);\r\n    };\r\n\r\n    public constructor(props: IRegistrationFormProps) {\r\n        super(props);\r\n        this.actions = container.get<RegistrationActions>(SERVICE_IDENTIFIER.RegistrationActions);\r\n        props.dispatch(this.actions.initForm());\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const initialValues = this.getInitialValues();\r\n\r\n        if (!initialValues) {\r\n            return <FormPlaceholder />;\r\n        }\r\n\r\n        return (\r\n            <Formik\r\n                enableReinitialize={true}\r\n                onSubmit={this._onSubmit}\r\n                validationSchema={this._createValidationSchemaObject()}\r\n                validateOnBlur={true}\r\n                initialValues={initialValues}\r\n            >\r\n                {(props): JSX.Element => (\r\n                    <Form\r\n                        success={!!this.props.form.formSuccess}\r\n                        loading={props.isSubmitting}\r\n                        error={!!this.props.form.formError?.message}\r\n                        onSubmit={props.handleSubmit}\r\n                    >\r\n                        <Translation>\r\n                            {(t) => (\r\n                                <>\r\n                                    <div className=\"text\">\r\n                                        <p>{t(\"Terms and condition header\")}</p>\r\n                                        <p>{t(\"Privacy policy\")}</p>\r\n                                    </div>\r\n                                    <div className=\"registrationForm\">\r\n                                        <InputComponent placeholder={t(\"Full name\")} required={true} autoFocus={true} name=\"userName\" />\r\n                                        <InputComponent placeholder={t(\"First name\")} required={true} autoFocus={true} name=\"firstName\" />\r\n                                        <InputComponent placeholder={t(\"Last name\")} required={true} autoFocus={true} name=\"lastName\" />\r\n                                        <InputComponent placeholder=\"Email\" required={true} autoFocus={true} name=\"email\" />\r\n                                        <InputComponent placeholder={t(\"Password\")} required={true} inputProps={{ type: \"password\" }} name=\"password\" />\r\n                                        <InputComponent placeholder={t(\"Repeat password\")} required={true} inputProps={{ type: \"password\" }} name=\"confirmPassword\" />\r\n                                    </div>\r\n                                    {/* <div className=\"checkBox\">\r\n                                        <CheckBoxComponent placeholder={t(\"label\")} required={true} name=\"isSubscribe\" />\r\n                                    </div> */}\r\n\r\n                                    <div className=\"pushButtons\">\r\n                                        <ButtonComponent onClick={() => this._onSubmit({\r\n                                            userName:this.props.form.record.userName,\r\n                                            firstName:this.props.form.record.firstName,\r\n                                            lastName:this.props.form.record.lastName,\r\n                                            email: this.props.form.record.email,\r\n                                            password:this.props.form.record.password,\r\n                                            confirmPassword: this.props.form.record.confirmPassword,\r\n                                            role: \"user\"\r\n                                        }, undefined)}  isValidating={props.isInitialValid} formSuccess={this.props.form.formSuccess} type=\"submit\" className=\"agree\" value={t(\"Agree and continue\")} />\r\n                                        <ButtonComponent onClick={() => history.push(LOGIN_PAGE)} isValidating={false} formSuccess={this.props.form.formSuccess} type=\"button\" className=\"login\" value={t(\"To Log In\")} />\r\n                                    </div>\r\n                                    <FormMessageWrapper isSuccess={true}>\r\n                                        {this.getCustomSuccessMessage()}\r\n                                    </FormMessageWrapper>\r\n                                    <FormMessageWrapper isError={true}>\r\n                                        {this.getCustomErrorMessage()}\r\n                                    </FormMessageWrapper>\r\n                                </>\r\n                            )}\r\n                        </Translation>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        );\r\n    };\r\n\r\n    protected getCustomErrorMessage: () => React.ReactNode | null = () => {\r\n        return this.props.form.formError?.message;\r\n    };\r\n\r\n    protected getCustomSuccessMessage: () => React.ReactNode | null = () => {\r\n        return this.props.form.formSuccess;\r\n    };\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: IRootState): IRegistrationState {\r\n    return state.registration;\r\n}\r\n\r\nexport const RegistrationForm = connect(\r\n    mapStateToProps\r\n)(RegistrationFormComponent);"],"sourceRoot":""}