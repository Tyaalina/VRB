{"version":3,"sources":["webpack:///./src/app/components/pages/topic/TopicSaga.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGoD;AAEC;AAGS;AACS;AAEA;AACvB;AAGhD;IAA+B,6BAAuD;IAGlF;QAAA,YAEQ,iBAAO,SAGV;QAPK,8BAAwB,GAAoC,qEAAS,CAAC,GAAG,CAAkC,4EAAkB,CAAC,+BAA+B,CAAC,CAAC;QAMjK,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACvC,CAAC;IAEO,yBAAK,GAAb;;;wBACI,WAAM,oEAAS,CAAC,qDAAK,EAAE,IAAI,CAAC,KAAK,CAAC;;oBAAlC,SAAkC,CAAC;;;;KACtC;IAEQ,yBAAK,GAAd;;;wBACI,WAAM,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,EACjE,UAAC,QAAmC;wBAChC,OAAO,CAAC,GAAG,CAAC,iDAAS,CAAC,CAAC;wBACvB,8DAAG,CAAC,EAAE,IAAI,EAAE,0DAAU,EAAE,SAAS,qDAAE,CAAC,CAAC;oBACxC,CAAC,CAAC;;oBAJH,SAIG,CAAC;;;;KACP;IACT,gBAAC;AAAD,CAAC,CArB8B,4EAAQ,GAqBtC","file":"app.e82fff70bb578ef9e006.hot-update.js","sourcesContent":["import { AccountServerInteractionService } from \"../../../services/serverInteraction/accountServerInteractionService\";\r\nimport { TopicDto } from \"../../../types/models/TopicDto\";\r\nimport { TopicActions } from \"./TopicAction\";\r\nimport { takeEvery, put } from \"redux-saga/effects\";\r\nimport { IActionPayloaded } from \"../../../reduxInfrastructure/actions/shared/IAction\";\r\nimport { SET_TOPICS, TOPIC } from \"./TopicConstants\";\r\nimport { ISubmitFormPayload } from \"../../../types/form/ISubmitFormPayload\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport container from \"../../../inversify/inversifyContainer\";\r\nimport { SERVICE_IDENTIFIER } from \"../../../inversify/inversifyTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { BaseSaga } from \"../../../reduxInfrastructure/sagas/BaseSaga\";\r\nimport dataTopic from \"../../../../../data.json\"\r\n\r\n\r\nexport class TopicSaga extends BaseSaga<TopicActions, AccountServerInteractionService> {\r\n    protected serverInteractionService: AccountServerInteractionService = container.get<AccountServerInteractionService>(SERVICE_IDENTIFIER.AccountServerInteractionService);\r\n    \r\n    public constructor(\r\n        ) {\r\n            super();\r\n    \r\n            this.topic = this.topic.bind(this);\r\n        }\r\n    \r\n        public *watch(): Generator {\r\n            yield takeEvery(TOPIC, this.topic);\r\n        }\r\n    \r\n        private *topic(): Generator {\r\n            yield this.doApiRequest( this.serverInteractionService.getTopic(),\r\n            (response: AxiosResponse<TopicDto[]>) => {\r\n                console.log(dataTopic);\r\n                put({ type: SET_TOPICS, dataTopic });\r\n             });\r\n        }\r\n}"],"sourceRoot":""}